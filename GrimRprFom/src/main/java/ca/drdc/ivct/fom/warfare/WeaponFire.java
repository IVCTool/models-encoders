package ca.drdc.ivct.fom.warfare;

import ca.drdc.ivct.fom.base.structs.EntityTypeStruct;
import ca.drdc.ivct.fom.base.structs.EventIdentifierStruct;
import ca.drdc.ivct.fom.base.structs.VelocityVectorStruct;
import ca.drdc.ivct.fom.base.structs.WorldLocationStruct;

/**
 * Communicates information associated with the firing or launch of a munition.
 */
public class WeaponFire {
    /**
     * An ID, generated by the issuing federate, used to associate related fire and detonation events.
     */
    private EventIdentifierStruct eventIdentifier;
    /**
     * The range used in the fire control solution. Zero if the range is unknown or inapplicable.
     */
    private float fireControlSolutionRange;
    /**
     * A unique index to identify the fire mission (used to associate weapon fire interactions in a single fire mission).
     */
    private long fireMissionIndex;
    /**
     * The location, in world coordinates, from which the munition was launched.
     */
    private WorldLocationStruct firingLocation;
    /**
     * The object instance ID of the entity firing the munition.
     * This must reference a valid Object instance.
     */
    private String firingObjectIdentifier;
    /**
     * The type of fuse on the munition.
     */
    private int fuseType;
    /**
     * The velocity vector of the munition when fired.
     */
    private VelocityVectorStruct initialVelocityVector;
    /**
     * The object instance ID of the fired munition, if an object instance is registered.
     * If there is no object instance associated with the parameter, then this should be
     * set to the empty string (no characters). Refer to SISO-STD-001 section 7.8.6 for handling empty strings.
     */
    private String munitionObjectIdentifier;
    /**
     * The type of munition being fired.
     */
    private EntityTypeStruct munitionType;
    /**
     * The number of rounds fired in the burst.
     */
    private int quantityFired;
    /**
     * The rate of fire in rounds per minute when quantity > 1. Zero otherwise.
     */
    private int rateOfFire;
    /**
     * The object instance ID of the intended target (if any).
     * If there is no object instance associated with the parameter, then this should be
     * set to the empty string (no characters). Refer to SISO-STD-001 section 7.8.6 for handling empty strings.
     */
    private String targetObjectIdentifier;
    /**
     * The type of warhead fitted to the munition being fired.
     */
    private int warheadType;

    public WeaponFire() {
    }

    public WeaponFire(
        EventIdentifierStruct eventIdentifier,
        float fireControlSolutionRange,
        long fireMissionIndex,
        WorldLocationStruct firingLocation,
        String firingObjectIdentifier,
        int fuseType,
        VelocityVectorStruct initialVelocityVector,
        String munitionObjectIdentifier,
        EntityTypeStruct munitionType,
        int quantityFired,
        int rateOfFire,
        String targetObjectIdentifier,
        int warheadType
    ) {
        this.eventIdentifier = eventIdentifier;
        this.fireControlSolutionRange = fireControlSolutionRange;
        this.fireMissionIndex = fireMissionIndex;
        this.firingLocation = firingLocation;
        this.firingObjectIdentifier = firingObjectIdentifier;
        this.fuseType = fuseType;
        this.initialVelocityVector = initialVelocityVector;
        this.munitionObjectIdentifier = munitionObjectIdentifier;
        this.munitionType = munitionType;
        this.quantityFired = quantityFired;
        this.rateOfFire = rateOfFire;
        this.targetObjectIdentifier = targetObjectIdentifier;
        this.warheadType = warheadType;
    }

    public EventIdentifierStruct getEventIdentifier() {
        return eventIdentifier;
    }

    public void setEventIdentifier(EventIdentifierStruct eventIdentifier) {
        this.eventIdentifier = eventIdentifier;
    }

    public float getFireControlSolutionRange() {
        return fireControlSolutionRange;
    }

    public void setFireControlSolutionRange(float fireControlSolutionRange) {
        this.fireControlSolutionRange = fireControlSolutionRange;
    }

    public long getFireMissionIndex() {
        return fireMissionIndex;
    }

    public void setFireMissionIndex(long fireMissionIndex) {
        this.fireMissionIndex = fireMissionIndex;
    }

    public WorldLocationStruct getFiringLocation() {
        return firingLocation;
    }

    public void setFiringLocation(WorldLocationStruct firingLocation) {
        this.firingLocation = firingLocation;
    }

    public String getFiringObjectIdentifier() {
        return firingObjectIdentifier;
    }

    public void setFiringObjectIdentifier(String firingObjectIdentifier) {
        this.firingObjectIdentifier = firingObjectIdentifier;
    }

    public int getFuseType() {
        return fuseType;
    }

    public void setFuseType(int fuseType) {
        this.fuseType = fuseType;
    }

    public VelocityVectorStruct getInitialVelocityVector() {
        return initialVelocityVector;
    }

    public void setInitialVelocityVector(VelocityVectorStruct initialVelocityVector) {
        this.initialVelocityVector = initialVelocityVector;
    }

    public String getMunitionObjectIdentifier() {
        return munitionObjectIdentifier;
    }

    public void setMunitionObjectIdentifier(String munitionObjectIdentifier) {
        this.munitionObjectIdentifier = munitionObjectIdentifier;
    }

    public EntityTypeStruct getMunitionType() {
        return munitionType;
    }

    public void setMunitionType(EntityTypeStruct munitionType) {
        this.munitionType = munitionType;
    }

    public int getQuantityFired() {
        return quantityFired;
    }

    public void setQuantityFired(int quantityFired) {
        this.quantityFired = quantityFired;
    }

    public int getRateOfFire() {
        return rateOfFire;
    }

    public void setRateOfFire(int rateOfFire) {
        this.rateOfFire = rateOfFire;
    }

    public String getTargetObjectIdentifier() {
        return targetObjectIdentifier;
    }

    public void setTargetObjectIdentifier(String targetObjectIdentifier) {
        this.targetObjectIdentifier = targetObjectIdentifier;
    }

    public int getWarheadType() {
        return warheadType;
    }

    public void setWarheadType(int warheadType) {
        this.warheadType = warheadType;
    }

    @Override
    public String toString() {
        return String.format(
            "WeaponFire [Event=%s Type=%s From=(Id=%s Location=%s) To=%s]",
            eventIdentifier,
            munitionType,
            firingObjectIdentifier,
            firingLocation,
            targetObjectIdentifier
        );
    }
}
